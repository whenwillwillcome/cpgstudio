document.addEventListener('DOMContentLoaded', () => {
  console.log("Custom.js loaded!");

  // FullPage.js Initialization
  new fullpage('#fullpage', {
      autoScrolling: true,
      navigation: false, // Remove navigation dots
      credits: { enabled: false }, // Remove FullPage.js credit
      afterLoad: function (origin, destination, direction) {
          const backgroundColor = document.querySelector('.background').style.backgroundColor;
          const shapeColor = document.querySelector('.shape').style.backgroundColor;

          // For all pages except Page 1, set text color to match shape color
          if (destination.index > 0) {
              const currentSection = document.querySelectorAll('.section')[destination.index];
              currentSection.style.backgroundColor = backgroundColor; // Background same as Page 1
              const textElement = currentSection.querySelector('.text');
              if (textElement) {
                  textElement.style.color = shapeColor; // Text matches shape color
              }
          }
      }
  });

  // Arrays for colors, shapes, and sizes
  const colors = [
    { shapeColor: '#9700FA', backgroundColor: '#FF3B00' },
    { shapeColor: '#3D006F', backgroundColor: '#D3FF61' },
    { shapeColor: '#3800FF', backgroundColor: '#90FF00' },
    { shapeColor: '#3900FF', backgroundColor: '#FFBDF2' },
    { shapeColor: '#8200FF', backgroundColor: '#0CFFFF' },
    { shapeColor: '#1A1A18', backgroundColor: '#E7E7E7' },
    { shapeColor: '#005C53', backgroundColor: '#E7E7E7' },
    { shapeColor: '#3E0051', backgroundColor: '#FF0000' },
    { shapeColor: '#672400', backgroundColor: '#00FF97' },
    { shapeColor: '#C5007A', backgroundColor: '#A1EAD8' },
    { shapeColor: '#CF00DC', backgroundColor: '#AAB74D' },
    { shapeColor: '#9E7F16', backgroundColor: '#E7E7E7' },
  ];
  const shapes = [
      { borderRadius: '50%' },
      { borderRadius: '0', clipPath: 'polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%)' },
      { borderRadius: '0', clipPath: 'polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%)' },
  ];
  const sizes = ["30vw", "40vw", "50vw"];

  let previousColor = null;
  let previousShape = null;
  let previousSize = null;

  const background = document.querySelector('.background');
  const shape = document.querySelector('.shape');
  const text = document.querySelector('.text');

  // Cursor-follow behavior
  let mouseX = window.innerWidth / 2;
  let mouseY = window.innerHeight / 2;
  let shapeX = mouseX;
  let shapeY = mouseY;
  const cursorSpeed = 0.15;

  document.addEventListener('mousemove', (event) => {
      mouseX = event.clientX;
      mouseY = event.clientY;
  });

  function animateShape() {
      shapeX += (mouseX - shapeX) * cursorSpeed;
      shapeY += (mouseY - shapeY) * cursorSpeed;

      shape.style.left = `${shapeX}px`;
      shape.style.top = `${shapeY}px`;

      requestAnimationFrame(animateShape);
  }

  // Cycle logic to avoid repetition
  function getNextItem(array, previousItem) {
      const filteredArray = array.filter((item) => item !== previousItem);
      const randomIndex = Math.floor(Math.random() * filteredArray.length);
      return filteredArray[randomIndex];
  }

  function applyRandomDesign() {
      const randomColor = getNextItem(colors, previousColor);
      const randomShape = getNextItem(shapes, previousShape);
      const randomSize = getNextItem(sizes, previousSize);

      // Update previous choices
      previousColor = randomColor;
      previousShape = randomShape;
      previousSize = randomSize;

      // Apply colors for Page 1
      background.style.backgroundColor = randomColor.backgroundColor;
      shape.style.backgroundColor = randomColor.shapeColor;
      text.style.color = randomColor.backgroundColor; // Text matches background color on Page 1

      // Apply size and shape
      shape.style.width = randomSize;
      shape.style.height = randomSize;
      shape.style.borderRadius = randomShape.borderRadius || '0';
      shape.style.clipPath = randomShape.clipPath || 'none';

      // Apply background color to all sections initially
      const sections = document.querySelectorAll('.section');
      sections.forEach((section, index) => {
          section.style.backgroundColor = randomColor.backgroundColor;
          const textElement = section.querySelector('.text');
          if (textElement && index > 0) {
              textElement.style.color = randomColor.shapeColor; // Text matches shape color on Page 2, 3, etc.
          }
      });
  }

  // Add click listener to shuffle designs
  document.addEventListener('click', applyRandomDesign);

  // Initial setup
  applyRandomDesign();
  animateShape();
});
